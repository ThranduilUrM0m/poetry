{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 111, "column": 0}, "map": {"version":3,"sources":["file:///app/src/app/slices/userSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\n\r\ninterface User {\r\n  _id: string;\r\n  _user_email: string;\r\n  _user_username: string;\r\n  _user_password: string;\r\n  _user_fingerprint?: string;\r\n  _user_picture?: string;\r\n  _user_firstname?: string;\r\n  _user_lastname?: string;\r\n  _user_city?: string;\r\n  _user_country?: {\r\n    _code: string;\r\n    _country: string;\r\n  };\r\n  _user_phone?: string;\r\n  _user_isVerified?: boolean;\r\n  _user_toDelete?: boolean;\r\n  _user_isActive?: boolean;\r\n  _user_teams?: Array<{\r\n    Team: string;\r\n    assignedFunction: Array<{\r\n      __title: string;\r\n      __description?: string;\r\n    }>;\r\n  }>;\r\n  Article?: string[];\r\n  Department?: string[];\r\n  Expertise?: string;\r\n  Role?: string[];\r\n}\r\n\r\ninterface UserState {\r\n  isAuthenticated: boolean;\r\n  user: User | null;\r\n  users: User[];\r\n  userToEdit: User | null;\r\n}\r\n\r\nconst initialState: UserState = {\r\n  isAuthenticated: false,\r\n  user: null,\r\n  users: [],\r\n  userToEdit: null,\r\n};\r\n\r\nexport const loginUser = createAsyncThunk(\r\n  'user/login',\r\n  async (credentials: { _user_identification: string; _user_password: string }, thunkAPI) => {\r\n    try {\r\n      const response = await axios.post('/auth/login', credentials);\r\n      return response.data.user;\r\n    } catch (error) {\r\n      return thunkAPI.rejectWithValue(error);\r\n    }\r\n  }\r\n);\r\n\r\nexport const registerUser = createAsyncThunk(\r\n  'user/register',\r\n  async (userData: Partial<User>, thunkAPI) => {\r\n    try {\r\n      const response = await axios.post('/auth/register', userData);\r\n      return response.data.user;\r\n    } catch (error) {\r\n      return thunkAPI.rejectWithValue(error);\r\n    }\r\n  }\r\n);\r\n\r\nexport const fetchUsers = createAsyncThunk(\r\n  'user/fetchUsers',\r\n  async (_, thunkAPI) => {\r\n    try {\r\n      const response = await axios.get('/users');\r\n      return response.data.users;\r\n    } catch (error) {\r\n      return thunkAPI.rejectWithValue(error);\r\n    }\r\n  }\r\n);\r\n\r\nconst userSlice = createSlice({\r\n  name: 'user',\r\n  initialState,\r\n  reducers: {\r\n    setUser(state, action: PayloadAction<User>) {\r\n      state.user = action.payload;\r\n      state.isAuthenticated = true;\r\n    },\r\n    clearUser(state) {\r\n      state.user = null;\r\n      state.isAuthenticated = false;\r\n    },\r\n    addUser(state, action: PayloadAction<User>) {\r\n      state.users.push(action.payload);\r\n    },\r\n    deleteUser(state, action: PayloadAction<string>) {\r\n      state.users = state.users.filter(user => user._id !== action.payload);\r\n    },\r\n    updateUser(state, action: PayloadAction<User>) {\r\n      const index = state.users.findIndex(user => user._id === action.payload._id);\r\n      if (index !== -1) {\r\n        state.users[index] = action.payload;\r\n      }\r\n    },\r\n    setUsers(state, action: PayloadAction<User[]>) {\r\n      state.users = action.payload;\r\n    },\r\n    clearUsers(state) {\r\n      state.users = [];\r\n    },\r\n    setUserToEdit(state, action: PayloadAction<User>) {\r\n      state.userToEdit = action.payload;\r\n    },\r\n    clearUserToEdit(state) {\r\n      state.userToEdit = null;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(loginUser.fulfilled, (state, action: PayloadAction<User>) => {\r\n        state.user = action.payload;\r\n        state.isAuthenticated = true;\r\n      })\r\n      .addCase(loginUser.rejected, (state) => {\r\n        state.user = null;\r\n        state.isAuthenticated = false;\r\n      })\r\n      .addCase(registerUser.fulfilled, (state, action: PayloadAction<User>) => {\r\n        state.user = action.payload;\r\n        state.isAuthenticated = true;\r\n      })\r\n      .addCase(registerUser.rejected, (state) => {\r\n        state.user = null;\r\n        state.isAuthenticated = false;\r\n      })\r\n      .addCase(fetchUsers.fulfilled, (state, action: PayloadAction<User[]>) => {\r\n        state.users = action.payload;\r\n      });\r\n  },\r\n});\r\n\r\nexport const {\r\n  setUser,\r\n  clearUser,\r\n  addUser,\r\n  deleteUser,\r\n  updateUser,\r\n  setUsers,\r\n  clearUsers,\r\n  setUserToEdit,\r\n  clearUserToEdit,\r\n} = userSlice.actions;\r\n\r\nexport default userSlice.reducer;\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 217, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 223, "column": 0}, "map": {"version":3,"sources":["file:///app/src/app/store/index.ts"],"sourcesContent":["import { configureStore } from '@reduxjs/toolkit';\r\nimport userReducer from '../slices/userSlice';\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    user: userReducer,\r\n  },\r\n});\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppDispatch = typeof store.dispatch;\r\n"],"names":[],"mappings":";;;AACA;AADA;;;AAGO,MAAM,QAAQ,CAAA,GAAA,2LAAA,CAAA,iBAAc,AAAD,EAAE;IAClC,SAAS;QACP,MAAM,iIAAA,CAAA,UAAW;IACnB;AACF"}},
    {"offset": {"line": 235, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 241, "column": 0}, "map": {"version":3,"sources":["file:///app/src/app/components/providers.tsx"],"sourcesContent":["'use client';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from '@/app/store';\r\n\r\nexport default function Providers({ children }: { children: React.ReactNode }) {\r\n  return <Provider store={store}>{children}</Provider>;\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AADA;AADA;;;;AAIe,SAAS,UAAU,EAAE,QAAQ,EAAiC;IAC3E,qBAAO,8OAAC,yJAAA,CAAA,WAAQ;QAAC,OAAO,4HAAA,CAAA,QAAK;kBAAG;;;;;;AAClC"}},
    {"offset": {"line": 261, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}